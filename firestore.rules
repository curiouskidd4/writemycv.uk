rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules

    // Only user with matching uid can read or write to resume collection, uid is in the document
    match /resumes/{resumeId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Public resume can be read by anyone but only the owner can write

    match /publicResume/{resumeId} {
      allow read: if true;
    }

    match /publicResume/{resumeId} {
      allow write: if request.auth.uid == resource.data.userId;
    }

    // Education section can be written by the owner of the resume

    match /education/{userId} {
      allow write, read: if request.auth.uid == userId;
    }

    match /experience/{userId} {
      allow write, read: if request.auth.uid == userId;
    }

    match /skill/{userId} {
      allow write, read: if request.auth.uid == userId;
    }

    match /personalInfo/{userId} {
      allow write, read: if request.auth.uid == userId;
    }

    match /professionalSummary/{userId} {
      allow write, read: if request.auth.uid == userId;
    }


    
  }
}